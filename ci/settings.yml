---
meta:
  name:    shield
  release: S.H.I.E.L.D.
  target:  sw
  url:     https://ci.starkandwayne.com

  initial_version: 5.1.0

  bosh-lite:
    target: https://10.58.111.44:25555
    deployment: shield-warden

  bosh-lite-cloud-config:
    target: https://10.58.111.49:25555
    deployment: shield-testflight-links
    username: (( vault "secret/bosh-lites/lite49/users/admin:username" ))
    password: (( vault "secret/bosh-lites/lite49/users/admin:password" ))
    cacert:   (( vault "secret/bosh-lites/lite49/certs:rootCA.pem" ))

  aws:
    access_key: (( vault "secret/aws/cfcommunity:access" ))
    secret_key: (( vault "secret/aws/cfcommunity:secret" ))

  github:
    owner:  starkandwayne
    repo:   shield-boshrelease
    branch: master
    private_key:  (( vault "secret/pipelines/shield-boshrelease/github:private" ))
    access_token: (( vault "secret/pipelines/shield-boshrelease/github:token" ))

  slack:
    webhook: (( vault "secret/pipelines/shield-boshrelease/slack:webhook" ))
    channel: '#shield'
    blob_success:  '(( concat "$BUILD_PIPELINE_NAME: New version of $BUILD_JOB_NAME was detected, and updated in master. <" meta.url "/pipelines/$BUILD_PIPELINE_NAME| Cut a new release?>" ))'
    blob_failure:  '(( concat "$BUILD_PIPELINE_NAME: :airplane_arriving: <" meta.url "/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME| Failed to update the blob for $BUILD_JOB_NAME>" ))'


groups:
- name: blobs
  jobs:
  - shield

jobs:
- name: shield
  public: true
  plan:
  - aggregate:
    - { get: git }
    - { get: shield, trigger: true, params: { include_source_tarball: true }}
  - task: update-shield
    config:
      image: docker:///starkandwayne/concourse
      platform: linux
      inputs:
      - name: git
      - name: shield
      outputs:
      - name: pushme
      run:
        path: ./git/ci/scripts/update-blob
      params:
        REPO_ROOT:   git
        REPO_OUT:    pushme
        RELEASE_DIR: shield
        BLOB:        shield
        BLOB_BINARY: shield-server-linux-amd64.tar.gz
        BLOB_URL:    https://github.com/starkandwayne/shield
        BLOB_DESTINATION: shield/shield-server-linux-amd64.tar.gz
        AWS_ACCESS_KEY: (( grab meta.aws.access_key ))
        AWS_SECRET_KEY: (( grab meta.aws.secret_key ))
        BRANCH:         (( grab meta.github.branch ))
    on_failure:
      put: notify
      params:
        channel:  (( grab meta.slack.channel ))
        username: (( grab meta.slack.username ))
        icon_url: (( grab meta.slack.icon ))
        text:     (( grab meta.slack.blob_failure ))
  - put: git
    params:
      rebase: true
      repository: pushme/git
    on_success:
      put: notify
      params:
        channel:  (( grab meta.slack.channel ))
        username: (( grab meta.slack.username ))
        icon_url: (( grab meta.slack.icon ))
        text:     (( grab meta.slack.blob_success ))
    on_failure:
      put: notify
      params:
        channel:  (( grab meta.slack.channel ))
        username: (( grab meta.slack.username ))
        icon_url: (( grab meta.slack.icon ))
        text:     (( grab meta.slack.blob_failure ))

resources:
- name: shield
  type: github-release
  source:
    user: starkandwayne
    repository: shield
    access_token: (( grab meta.github.access_token ))
