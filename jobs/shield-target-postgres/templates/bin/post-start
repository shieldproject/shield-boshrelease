#!/bin/bash
<% if spec.bootstrap -%>
<% require 'json' -%>
export PATH=${PATH}:/var/vcap/packages/shield/bin
export PATH=${PATH}:/var/vcap/packages/utils/bin
SHIELD_CONFIG=$(mktemp --tmpdir auto.XXXXXX)
trap "rm -rf ${SHIELD_CONFIG}" INT TERM QUIT EXIT

<%
  api_key = link('shield-daemon').p('auth.api_keys').values.first
  endpoint = "http://#{link('shield-daemon').instances.first.address}:8080"
-%>
# The SHIELD_API_TOKEN is set here so that the post-start script will fail
# to render when provisioning_key is not specified, but the script is about
# to try to create targets or jobs
export SHIELD_API_TOKEN=<%= api_key %>
export SHIELD_SKIP_SSL_VERIFY=true

# Create a specific  config file for shield-agent stuff, to avoid race
# conditions in case we are colocated with shield-daemon.
shield -c ${SHIELD_CONFIG} create-backend default <%= endpoint %>

<%
   my_ip = nil
   if_p('ip') do |ip|
     my_ip = ip
   end
   my_ip = spec.address if my_ip.nil?
-%>
provision() {
	local name=$1; shift
	uuid=$(shield -c ${SHIELD_CONFIG} --raw $* $name | jq -r '.uuid // empty')
	if [[ -z ${uuid} ]]; then
		echo "Creating a new $* named '$name'"
		tee >(shield --trace --debug -c ${SHIELD_CONFIG} --raw create-$*)
	else
		echo "Editing existing $* named '$name'"
		tee >(shield --trace --debug -c ${SHIELD_CONFIG} --raw edit-$* ${uuid})
	fi
}
job() {
  local name=$1
  local targ=$(shield -c ${SHIELD_CONFIG} --raw target   $2 | jq -r '.uuid // empty')
  local stor=$(shield -c ${SHIELD_CONFIG} --raw store    $3 | jq -r '.uuid // empty')
  local retn=$(shield -c ${SHIELD_CONFIG} --raw policy   $4 | jq -r '.uuid // empty')
  local sche=$(shield -c ${SHIELD_CONFIG} --raw schedule $5 | jq -r '.uuid // empty')

  cat <<EOF | provision $name job
{"name":      "${name}",
 "target":    "${targ}",
 "store":     "${stor}",
 "retention": "${retn}",
 "schedule":  "${sche}",
 "paused":    false}
EOF
}

<%
  p("databases").each do |database|
    name = "#{spec.deployment}/#{spec.name}/#{database}"
-%>
cat <<EOF | provision '<%= name %>' target
{ "name":     "<%= name %>",
  "plugin":   "postgres",
  "agent":    "<%= my_ip %>:5444",
  "endpoint": <%= {
    "pg_host" => "127.0.0.1",
    "pg_port" => "5432",
    "pg_user" => "vcap",
    "pg_password" => "local-access-via-vcap-user",
    "pg_database" =>  database,
    "pg_bindir" =>  "/var/vcap/packages/postgres/bin"
  }.to_json.dump %>
}
EOF

job '<%= name %>'                      \
    '<%= name %>'                      \
    '<%= p("job.store") %>'            \
    '<%= p("job.retention-policy") %>' \
    '<%= p("job.schedule") %>'

<% end -%>

sleep 5
echo "all done"
<% else -%>
echo "SHIELD setup for postgres will be run on the bootstrap instance. Skipping..."
<% end -%>
