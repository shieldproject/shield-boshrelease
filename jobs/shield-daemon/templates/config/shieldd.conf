<%
  if p('database.host', nil)
    username, password, host, port, dbname = p('database.username'), p('database.password'), p('database.host'), p('database.port'), p('database.db')
    scheme = p('database.type', 'postgres')
  else
    l = link('shield-db')
    scheme = l.p('db_scheme')
    port =   l.p('port')
    host =   l.instances.first.address
    dbname = l.p('databases').select {|database| database['tag'] == 'shield'}.first['name']
    role =   l.p('roles').first
    username, password = role['name'], role['password']
  end
  if scheme == "mysql"
    shielddb_uri = "#{username}:#{password}@tcp(#{host}:#{port})/#{dbname}?sql_mode=POSTGRESQL&default_storage_engine=INNODB"
  else
    shielddb_uri = "#{scheme}://#{username}:#{password}@#{host}:#{port}/#{dbname}?sslmode=disable"
  end
  shielddb_scheme = scheme

  if_p("auth.oauth.provider") do
    if p('database.host', nil)
      username, password, host, port, db = p('auth.oauth.sessions.db.username'), p('auth.oauth.sessions.db.password'), p('auth.oauth.sessions.db.host'), p('auth.oauth.sessions.db.port'), p('auth.oauth.sessions.db.name')
      scheme = p('auth.oauth.sessions.db.type', 'postgres')
    else
      l = link('sessions-db')
      scheme = l.p('db_scheme')
      port =   l.p('port')
      host =   l.instances.first.address
      dbname = l.p('databases').select {|database| database['tag'] == 'sessions'}.first['name']
      role =   l.p('roles').first
      username, password = role['name'], role['password']
    end
    if scheme == "mysql"
      sessionsdb_uri = "#{username}:#{password}@tcp(#{host}:#{port})/#{db}?sql_mode=POSTGRESQL&default_storage_engine=INNODB"
    else
      sessionsdb_uri = "#{scheme}://#{username}:#{password}@#{host}:#{port}/#{db}?sslmode=disable"
    end
    sessionsdb_scheme = scheme
  end
-%>
---
database_type: "<%= shielddb_scheme %>"
database_dsn: "<%= shielddb_uri %>"
listen_addr: 0.0.0.0:8080
private_key: /var/vcap/jobs/shield-daemon/shared/id_rsa
web_root: /var/vcap/packages/shield/webui


auth:
  basic:
    user: <%= p("auth.username") %>
    password: <%= p("auth.password") %>
<% if_p("auth.api_keys") do |tokens| -%>
  api_tokens:
<% tokens.each do |k, v| -%>
    <%= k %>: <%= v %>
<% end -%>
<% end -%>
<% if_p("auth.oauth.provider") do |provider| -%>
  oauth:
    provider: <%= provider %>
    key: <%= p("auth.oauth.key") %>
    secret: <%= p("auth.oauth.secret") %>
    base_url: https://<%= p("domain", link("shield-daemon").instances.first.address) %>:<%= p("port") %>
    authorization:
      orgs:
<% p("auth.oauth.authorization.orgs").each do |org| -%>
      - <%= org %>
<% end -%>
    sessions:
      type: "<%= sessionsdb_scheme %>"
      dsn: "<%= sessionsdb_uri %>"
      max_age: <%= p("auth.oauth.sessions.max_age") %>
<% end -%>
